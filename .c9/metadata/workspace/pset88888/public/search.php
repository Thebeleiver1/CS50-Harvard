{"filter":false,"title":"search.php","tooltip":"/pset88888/public/search.php","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":7,"column":4},"end":{"row":7,"column":79},"action":"remove","lines":["// TODO: search database for places matching $_GET[\"geo\"], store in $places"],"id":2},{"start":{"row":7,"column":4},"end":{"row":49,"column":5},"action":"insert","lines":["$geo = $_GET[\"geo\"];","    $geo = str_replace(\",\", \" \", $geo);","    $geo = trim($geo);","    // Count how many words were entered into the search","    $geo = explode(\" \", $geo);","    $count = count($geo);","    // Error out if the user did not provide input","    if ($count < 1)","    {","    \tprint(\"Please enter a query string.\");","    }","    elseif ($count === 1)","    {","    \t$geo = $geo[0];","    \t// Check zipcode if the length of the string is 5 chars","    \tif(strlen($geo) === 5)","    \t{","    \t\t$places = query(\"SELECT * FROM places WHERE postal_code = ?\", $geo);\t","    \t}","    \telseif(strlen($geo) == 2)","    \t{","    \t\t// Check state abbreviation, called admin_code1","    \t\t$places = query(\"SELECT * FROM places WHERE admin_code1 = ?\", strtoupper($geo));","    \t}","    \telse","    \t{","    \t\t// Check city, called place_name in places table","    \t\t$places = query(\"SELECT * FROM places WHERE place_name LIKE ?\", $geo);","    \t}","    \t","    \tif(empty($places))","    \t{","    \t\t// Check state, called admin_name1","    \t\t$places = query(\"SELECT * FROM places WHERE admin_name1 LIKE ?\", $geo);","    \t}","    }","    elseif($count > 1)","    {","    \t// Reassemble places into one long string","    \t$geo = implode(\" \", $geo);","    \t// Search across multiple columns","    \t$places = query(\"SELECT * FROM places WHERE MATCH(postal_code, place_name, admin_name1, admin_code1) AGAINST (?)\", $geo);","    }"]}],[{"start":{"row":7,"column":4},"end":{"row":49,"column":5},"action":"remove","lines":["$geo = $_GET[\"geo\"];","    $geo = str_replace(\",\", \" \", $geo);","    $geo = trim($geo);","    // Count how many words were entered into the search","    $geo = explode(\" \", $geo);","    $count = count($geo);","    // Error out if the user did not provide input","    if ($count < 1)","    {","    \tprint(\"Please enter a query string.\");","    }","    elseif ($count === 1)","    {","    \t$geo = $geo[0];","    \t// Check zipcode if the length of the string is 5 chars","    \tif(strlen($geo) === 5)","    \t{","    \t\t$places = query(\"SELECT * FROM places WHERE postal_code = ?\", $geo);\t","    \t}","    \telseif(strlen($geo) == 2)","    \t{","    \t\t// Check state abbreviation, called admin_code1","    \t\t$places = query(\"SELECT * FROM places WHERE admin_code1 = ?\", strtoupper($geo));","    \t}","    \telse","    \t{","    \t\t// Check city, called place_name in places table","    \t\t$places = query(\"SELECT * FROM places WHERE place_name LIKE ?\", $geo);","    \t}","    \t","    \tif(empty($places))","    \t{","    \t\t// Check state, called admin_name1","    \t\t$places = query(\"SELECT * FROM places WHERE admin_name1 LIKE ?\", $geo);","    \t}","    }","    elseif($count > 1)","    {","    \t// Reassemble places into one long string","    \t$geo = implode(\" \", $geo);","    \t// Search across multiple columns","    \t$places = query(\"SELECT * FROM places WHERE MATCH(postal_code, place_name, admin_name1, admin_code1) AGAINST (?)\", $geo);","    }"],"id":3},{"start":{"row":7,"column":4},"end":{"row":7,"column":126},"action":"insert","lines":["$places = CS50::query(\"SELECT * FROM places WHERE MATCH(postal_code, place_name, admin_name1) AGAINST (?)\", $_GET[\"geo\"]);"]}]]},"ace":{"folds":[],"scrolltop":28.5,"scrollleft":0,"selection":{"start":{"row":7,"column":126},"end":{"row":7,"column":126},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1465781018680,"hash":"8bd1f184bb63d1c1baf2ce94af47a65c61c94376"}